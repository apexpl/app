<?php
declare(strict_types=1);

namespace Apex\App\Cli\Commands\Gpt;

use Apex\Svc\{App, HttpClient};
use Apex\App\Cli\Helpers\{PackageHelper, ChatGptHelper};
use Apex\App\Cli\{Cli, CliHelpScreen};
use Apex\App\Interfaces\Opus\CliCommandInterface;

/**
 * Generate GPT
 */
class Generate implements CliCommandInterface
{

    #[Inject(App::class)]
    private App $app;

    #[Inject(HttpClient::class)]
    private HttpClient $http;

    #[Inject(PackageHelper::class)]
    private PackageHelper $pkg_helper;

    #[Inject(ChatGptHelper::class)]
    private ChatGptHelper $gpt_helper;

    /**
     * Process
     */
    public function process(Cli $cli, array $args):void
    {

        // Get package
        if (!$pkg = $this->pkg_helper->get(($args[0] ?? ''))) { 
            return;
    }

        // Get description / prompt
        $cli->sendHeader("GPT Code Generation");
        $cli->send("In plain text, define the functionality you would like automatically developed.  This will automatically generate the necessary models, views, menus, controllers, and more for the exact functionality.\n\n");
        $cli->send("Once done, leave a blank line by pressing enter key twice to start the code generation.\n\n");

        // Get input
        $prompt = $cli->getInput("What are you developing? ");
        do {
            $line = $cli->getInput("");
            if ($line == '') {
                break;
            }           $prompt .= "\n\n" . $line;
        } while (true);

        // Set message
        $tbl_prefix = "'" . $pkg->getAlias() . "_'";
        $message = "In SQL, write mySQL database schema for $prompt, prefix all table names with $tbl_prefix, use an \id INT NOT NULL AUTO_INCREMENT\" column for all primary key columns, and write the results in SQL code.";
        $cli->send("Sending request to OpenAPI.  Please be patient, this may take a moment...\n");

        // Send message, generate SQL schema
        if (!$sql = $this->gpt_helper->send($message)) {
            return;
        }

        // Save SQL, allow user to modify as desired
        file_put_contents(SITE_PATH . '/chat_gpt.sql', $sql);
        $cli->send("A file named 'chat_gpt.sql' has been saved within this directory, and contains the SQL database schema as generated by Chat GPT.  Please modify the schema as desired, and press enter once done to continue with code generation.\n");
        $cli->getInput("");

    echo "$sql\n";
file_put_contents("z.txt", $sql);
echo "Saved\n";exit;



    }

    /**
     * Help
     */
    public function help(Cli $cli):CliHelpScreen
    {

        // Define help scren
        $help = new CliHelpScreen(
            title: 'GPT Code Generation',
            description: 'Automatically generate all components for any functionality, including models, views, controllers, menus, et al.',
            usage: 'gpt generate <PKG_ALIAS>'
        );

    // Return
        return $help;
    }

}





